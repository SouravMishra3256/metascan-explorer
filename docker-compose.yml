version: '3.2'
services:
  harvester:
    build: harvester/.
    image: polkascan/harvester
    restart: unless-stopped
    entrypoint: /usr/src/start.sh
    ports:
      - '${HARVESTER_LOCAL_PORT}:${HARVESTER_CONTAINER_PORT}'
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - SUBSTRATE_RPC_URL=${SUBSTRATE_RPC_URL}
      - NODE_TYPE=archive
      - SUBSTRATE_SS58_FORMAT=42
      - INSTALLED_ETL_DATABASES=${INSTALLED_ETL_DATABASES}

  polling:
    build:
      context: explorer-api/.
      dockerfile: ./docker/polling/Dockerfile
    image: polkascan/explorer-polling
    restart: unless-stopped
    command: python polling.py
    depends_on:
      - redis
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_PASSWORD=${DB_PASSWORD}
      - BROADCAST_URI=${BROADCAST_URI}
      - CHAIN_ID=polkadot
      - SENTRY_PROJECT_NAME=explorer-polling-v2
      - SENTRY_SERVER_NAME=polkadapt
      - SENTRY_DSN=

  api:
    build:
      context: explorer-api/.
      dockerfile: ./docker/api/Dockerfile
    image: polkascan/explorer-api
    restart: unless-stopped
    command: bash -c "/usr/src/start-api.sh"
    ports:
      - "${API_LOCAL_PORT}:${API_CONTAINER_PORT}"
    depends_on:
      - redis
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HARVESTER_NAME=${DB_HARVESTER_NAME}
      - DOMAIN=${DOMAIN}
      - SERVER_ADDR=${SERVER_ADDR}
      - SERVER_PORT=${SERVER_PORT}
      - WEBSOCKET_URI=${WEBSOCKET_URI}
      - BACKEND_CORS_ORIGINS=[]
      - BROADCAST_URI=${BROADCAST_URI}
      - API_SQLA_URI=${API_SQLA_URI}
      - CHAIN_ID=polkadot
      - SENTRY_PROJECT_NAME=explorer-api-v2
      - SENTRY_SERVER_NAME=polkadapt
      - SENTRY_DSN=

  gui:
    build:
      context: explorer-ui/.
    image: polkascan/explorer-ui
    restart: unless-stopped
    ports:
      - "${GUI_LOCAL_PORT}:${GUI_CONTAINER_PORT}"
    depends_on:
      - api

  redis:
    image: "redis:latest"
